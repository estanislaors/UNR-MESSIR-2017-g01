package icrash.operations.environment.actCoordinator.oeSetCrisisStatus {

import lu.uni.lassy.messir.libraries.primitives
import lu.uni.lassy.messir.libraries.math
import lu.uni.lassy.messir.libraries.string
import lu.uni.lassy.messir.libraries.calendar
import icrash.concepts.primarytypes.datatypes
import icrash.concepts.primarytypes.classes
import icrash.environment

Operation Model {

operation: actCoordinator.outactCoordinator.oeSetCrisisStatus(AdtCrisisID:dtCrisisID, AetCrisisStatus:etCrisisStatus):ptBoolean{
preP {
  let
  	TheSystem : ctState,
  	TheActor : actAuthenticated
  in
  	TheSystem = self.rnActor.rnSystem
  	TheActor = self.rnActor 
  
    /* PreP01 */
    TheSystem.vpStarted = true
	/* PreP02 */
	TheActor.rnctAuthenticated.vpIsLogged = true 
}
preF {
	let 
    	TheSystem : ctState,
		TheCrises : Set(ctCrisis),
		TheTargetCrisis : Set(ctCrisis)
	in
		TheSystem = self.rnActor.rnSystem 
		TheCrises = TheSystem.rnctCrisis
		/* PreF01 */
		TheTargetCrisis = TheCrises->select(c : ctCrisis | c.id = AdtCrisisID)
		TheTargetCrisis->size = 1
}
postF {
    let 
    	TheSystem : ctState,
		TheCoordinator : ctCoordinator,
		TheTargetCrisis : Set(ctCrisis)
	in
		TheSystem = self.rnActor.rnSystem 
		TheCoordinator = self.rnActor 
		TheTargetCrisis = TheSystem.rnctCrisis->select(c : ctCrisis | c.id = AdtCrisisID)
		
		/* PostF01 */
		TheTargetCrisis->first@post.status = AetCrisisStatus
		/* PostF02 */
		TheMessage = 'The crisis status changed to '.ptStringConcat(AetCrisisStatus).' with ID: '.ptStringConcat(TargetCrisis->first.id)
		TheCoordinator.rnInterfaceIN^ieMessage(TheMessage)
}
postP {
	/* PostP01 */
	true
}
prolog{"src/Operations/Environment/OUT/outactCoordinator-oeSetCrisisStatus.pl"}
}

}
}